# AUTOGENERATED! DO NOT EDIT! File to edit: 04_clean_data.ipynb (unless otherwise specified).

__all__ = ['rm_bots_subreddits', 'rm_dupl_comments', 'rm_comm_no_toks']

# Cell
import pandas as pd

# Cell
def rm_bots_subreddits(df):
    subred_bots = ['IHATECOOLDOWNBOT', 'u_CoolDownBot', 'u_fcdb3']
    comm_pre = len(df)
    df = df.loc[~df['subreddit'].isin(subred_bots)]
    comm_post = len(df)
    comm_bots = comm_pre - comm_post
    print(f"bot comments (abs): {comm_bots}")
    print(f"bot comments (rel): {comm_bots / comm_pre}")
    return df

# Cell
def rm_dupl_comments(df):
    comm_n_pre = len(df)
    df.drop_duplicates(subset='id', inplace=True)
    comm_n_post = len(df)
    print(f"duplicates removed: {comm_n_pre - comm_n_post}")
    return df

# Cell
def rm_comm_no_toks(df, LEX):
    comm_n_pre = len(df)

    lex_parts = (LEX
                   .lower()
                   .replace('-', ' ')
                   .split()
    )

    case_variants = set([
        ''.join([part for part in lex_parts]),
        ' '.join([part for part in lex_parts]),
        '-'.join([part for part in lex_parts])
    ])

    df['body'] = df['body'].astype('string')
    df = df.loc[df['body'].apply(lambda x: any([case in x.lower() for case in case_variants]))]

    comm_n_post = len(df)

    print(pd.DataFrame(data = [
        ['total comments', comm_n_pre],
        ['w/o tokens', comm_n_pre - comm_n_post]
        ]))

    return df